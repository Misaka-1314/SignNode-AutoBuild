name: 构建并发布 PyInstaller 应用

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  fetch-version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.parse-response.outputs.VERSION }}
      URL: ${{ steps.parse-response.outputs.URL }}   

    steps:
      - name: 获取最新版本信息
        id: get-version
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.waadri.top/ChaoXing/api/get_version.json'
          method: 'GET'
      
      - name: 显示输出
        run: echo "${{ steps.get-version.outputs.response }}"

      - name: 设置输出
        id: parse-response
        run: |
          echo "VERSION=${{ fromJson(steps.get-version.outputs.response).latest_version }}" >> $GITHUB_OUTPUT
          echo "URL=${{ fromJson(steps.get-version.outputs.response).py_download_url }}" >> $GITHUB_OUTPUT

          echo "VERSION=${{ fromJson(steps.get-version.outputs.response).latest_version }}" >> $GITHUB_ENV
          echo "URL=${{ fromJson(steps.get-version.outputs.response).py_download_url }}" >> $GITHUB_ENV

  pyinstaller-linux:
    runs-on: ubuntu-latest
    needs: fetch-version

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 下载最新代码
        run: |
          curl -o "main.py" "${{ needs.fetch-version.outputs.URL }}"

      - name: 使用PyInstaller构建
        run: |
          pyinstaller --onefile --name sign-node.linux-amd64.out main.py        
          
      - name: 上传构建文件 (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: sign-node.linux-amd64.out
          path: ./dist/sign-node.linux-amd64.out

  pyinstaller-windows:
    runs-on: windows-latest
    needs: fetch-version

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          choco install zip

      - name: 下载最新代码
        run: |
          curl -o "main.py" "${{ needs.fetch-version.outputs.URL }}"

      - name: 使用PyInstaller构建
        run: |
          pyinstaller --onefile --name sign-node.windows-amd64.exe main.py

      - name: 上传构建文件 (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: sign-node.windows-amd64.exe
          path: ./dist/sign-node.windows-amd64.exe

  release:
    runs-on: ubuntu-latest
    needs: [fetch-version, pyinstaller-linux, pyinstaller-windows]
    steps:
      - name: 下载 Linux 构建包
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: true

      - name: 下载 Windows 构建包
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: true

      - name: 文件目录
        run: ls -R ./

      - name: 创建发布版本
        uses: softprops/action-gh-release@v2
        with:
          files: |
            sign-node.linux-amd64.out
            sign-node.windows-amd64.exe
          tag_name: "v${{ needs.fetch-version.outputs.VERSION }}"
